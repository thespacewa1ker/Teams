[{"C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\index.js":"1","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\App.js":"2","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\reducer.js":"3","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\StateProvider.js":"4","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\Sidebar.js":"5","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\Chat.js":"6","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\Login.js":"7","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\firebase.js":"8","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\SidebarChat.js":"9"},{"size":431,"mtime":1608643268000,"results":"10","hashOfConfig":"11"},{"size":786,"mtime":1608643268000,"results":"12","hashOfConfig":"11"},{"size":391,"mtime":1608643268000,"results":"13","hashOfConfig":"11"},{"size":367,"mtime":1608643268000,"results":"14","hashOfConfig":"11"},{"size":2484,"mtime":1625922358040,"results":"15","hashOfConfig":"11"},{"size":3486,"mtime":1608643268000,"results":"16","hashOfConfig":"11"},{"size":1055,"mtime":1625898853255,"results":"17","hashOfConfig":"11"},{"size":768,"mtime":1625895869434,"results":"18","hashOfConfig":"11"},{"size":1478,"mtime":1608643268000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"676zpx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\index.js",[],["43","44"],"C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\App.js",["45"],"import './App.css';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Login from './components/Login';\nimport { useStateValue } from './components/StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue()\n\n  return (\n    <div className=\"app\">\n      {!user ? (<Login />) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\reducer.js",[],"C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\StateProvider.js",[],"C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\Sidebar.js",["46"],"import React, { useState, useEffect } from 'react'\nimport db from \"../firebase\"\nimport { Avatar, IconButton } from '@material-ui/core'\nimport CalendarTodaySharpIcon from '@material-ui/icons/CalendarTodaySharp';\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\nimport './Sidebar.css'\nimport { SearchOutlined } from '@material-ui/icons';\nimport SidebarChat from './SidebarChat';\nimport { useStateValue } from './StateProvider';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\n\n\nconst Sidebar = () => {\n    const [rooms, setRooms] = useState([])\n    const [{ user }, dispatch] = useStateValue()\n\n    useEffect(() => {\n        db.collection('rooms').onSnapshot(snapshot => (\n            setRooms(snapshot.docs.map(doc => (\n                {\n                    id: doc.id,\n                    data: doc.data()\n                }\n            )))\n        ))\n    }, [])\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar__headerRight\">\n                    \n                    <button variant=\"contained\"  type=\"button\" onClick={(e)=>{\n                        e.preventDefault();\n                        // window.location.href='https://teams-video-frontend.herokuapp.com';\n                        window.open('https://teams-video-frontend.herokuapp.com')\n                    }}>\n                        <IconButton>\n                            <VideoCallIcon fontSize=\"large\" />\n                        </IconButton> \n                    </button>\n                    \n                    <IconButton>\n                        <CalendarTodaySharpIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <AddAlertIcon />\n                    </IconButton>\n                    \n                    \n                </div>\n            </div>\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n                    <SearchOutlined />\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n            </div>\n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat />\n                {rooms.map(room => (\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\Chat.js",["47"],"import React, { useEffect, useState }  from 'react'\nimport { Avatar, IconButton } from '@material-ui/core'\nimport { AttachFile, MoreVert, SearchOutlined, InsertEmoticon } from '@material-ui/icons'\nimport MicIcon from '@material-ui/icons/Mic'\nimport './Chat.css'\nimport db from '../firebase'\nimport { useParams } from 'react-router-dom'\nimport { useStateValue } from './StateProvider'\nimport firebase from 'firebase'\n\nconst Chat = () => {\n    const [seed, setSeed] = useState('')\n    const [input, setInput] = useState('')\n    const { roomId } = useParams()\n    const [roomName, setRoomName] = useState('')\n    const [messages, setMessages] = useState([])\n    const [{ user }, dispatch] = useStateValue()\n\n    useEffect(() => {\n        if(roomId) {\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => (\n                setRoomName(snapshot.data().name)\n            ))\n\n            db.collection(\"rooms\")\n            .doc(roomId)\n            .collection(\"messages\")\n            .orderBy(\"timestamp\", \"asc\")\n            .onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())))\n        }\n    }, [roomId])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000))\n    }, [])\n\n    const sendMessage = e => {\n        e.preventDefault()\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setInput('')\n    }\n\n    return (\n        <div className='chat'>\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/b${seed}.svg`} />\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\" \"}\n                        {new Date(messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}\n                    </p>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat__body\">\n                {messages.map(message => (\n                    <p className={`chat__message ${message.name === user.displayName && 'chat__receiver'}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\n                        </span>\n                    </p>\n                ))}\n            </div>\n            <div className=\"chat__footer\">\n                <InsertEmoticon />\n                <form>\n                    <input\n                        value={input}\n                        onChange={e => setInput(e.target.value)} \n                        placeholder=\"Type a message\"\n                        type=\"text\"\n                    />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\Login.js",["48"],"import React from 'react'\nimport { Button } from '@material-ui/core'\nimport './Login.css'\nimport { auth, provider } from '../firebase'\nimport { actionTypes } from './reducer'\nimport { useStateValue } from './StateProvider'\n\nconst Login = () => {\n    const [{}, dispatch] = useStateValue()\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .then(result => {\n            dispatch({\n                type: actionTypes.SET_USER,\n                user: result.user\n            })\n        })\n        .catch(error => alert(error.message))\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://www.leafsoftwaresolutions.com/uploads/8/7/0/2/87024912/microsoft-teams_orig.png\" alt=\"Teams\" />\n                <div className=\"login__text\">\n                <h1 style={{color: \"Navy\"}}>Sign in to Teams!</h1>\n                </div> \n                <Button onClick={signIn}>Sign In with Google</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\firebase.js",[],"C:\\Users\\Sanjay\\Desktop\\New folder\\teams-firebase-clone\\src\\components\\SidebarChat.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":20,"nodeType":"55","messageId":"56","endLine":9,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":15,"column":22,"nodeType":"55","messageId":"56","endLine":15,"endColumn":30},{"ruleId":"53","severity":1,"message":"54","line":17,"column":22,"nodeType":"55","messageId":"56","endLine":17,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":9,"column":12,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]